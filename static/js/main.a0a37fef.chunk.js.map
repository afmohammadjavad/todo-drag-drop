{"version":3,"sources":["components/Header.jsx","components/Image.jsx","context/tasksContext.js","components/ToDoForm.jsx","components/ToDoCard.jsx","hoc/withDraggable.jsx","components/ToDoItems.jsx","components/DeleteAll.jsx","components/ToDo.jsx","components/Content.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","style","background","backgroundSize","Image","href","target","src","alt","zIndex","minWidth","TasksContext","React","createContext","displayName","ToDoForm","useContext","text","setText","explanation","setExplanation","items","setItems","refInput","onSubmit","e","preventDefault","length","newItem","done","id","Date","now","creationDate","toLocaleString","doneDate","allNewItems","push","current","focus","htmlFor","type","opacity","color","placeholder","value","onChange","autoFocus","ref","rows","withDraggable","Component","props","draggableId","index","provided","snapshot","innerRef","draggableProps","dragHandleProps","item","textDecorationLine","justifyContent","onClick","targetItem","newItems","map","handleDone","filter","handleDelete","ToDoItems","onDragEnd","result","console","log","destination","orderedItems","splice","source","droppableId","droppableProps","DeleteAll","ToDo","useState","createRef","Provider","Content","marginTop","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0a37fef.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div\r\n      className=\"container-fluid px-0 pt-2 fixed-top rounded bg-light\"\r\n      style={{\r\n        background: \"url(image/bgimage.jpg) no-repeat center fixed\",\r\n        backgroundSize: \"cover\",\r\n      }}\r\n    >\r\n      <div className=\"row mx-0 d-block text-center\">\r\n        <br />\r\n        <h1>ToDo</h1>\r\n        <p>A web application for storing your to-do list </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction Image() {\r\n  return (\r\n    <div className=\"container-fluid p-0 fixed-top pl-4 pt-3\">\r\n      <div className=\"row m-0\">\r\n        <div className=\"col-1 p-0\">\r\n          <a href=\"https://github.com/afmohammadjavad\" target=\"_blank\">\r\n            <img\r\n              src=\"image/me/me.jpg\"\r\n              alt=\"afmohammadjavad\"\r\n              className=\"img-fluid rounded-circle float-left\"\r\n              style={{ zIndex: \"10\", minWidth: \"65px\" }}\r\n            />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Image;\r\n","import React from \"react\";\r\n\r\nconst TasksContext = React.createContext();\r\nTasksContext.displayName = \"TasksContext\";\r\n\r\nexport default TasksContext;\r\n","import React, { useContext } from \"react\";\r\nimport TasksContext from \"../context/tasksContext\";\r\n\r\nfunction ToDoForm() {\r\n  const {\r\n    text,\r\n    setText,\r\n    explanation,\r\n    setExplanation,\r\n    items,\r\n    setItems,\r\n    refInput,\r\n  } = useContext(TasksContext);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (text.length === 0 || explanation.length === 0) return;\r\n    const newItem = {\r\n      text: text || `topic #${items.length + 1}`,\r\n      explanation: explanation || `explanation #${items.length + 1}`,\r\n      done: false,\r\n      id: `${Date.now()}`,\r\n      creationDate: new Date().toLocaleString(),\r\n      doneDate: \"\",\r\n    };\r\n    const allNewItems = [...items];\r\n    allNewItems.push(newItem);\r\n    setItems(allNewItems);\r\n    setText(\"\");\r\n    setExplanation(\"\");\r\n    refInput.current.focus();\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      className=\" border rounded p-3 shadow-lg\"\r\n    >\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"FormControlInput1\">Topic</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control bg-transparent border rounded shadow\"\r\n          style={{opacity: '1', color: 'black'}}\r\n          id=\"FormControlInput1\"\r\n          placeholder=\"what should be done?\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n          autoFocus\r\n          ref={refInput}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"FormControlTextarea1\">Explanation</label>\r\n        <textarea\r\n          className=\"form-control bg-transparent border rounded shadow\"\r\n          style={{opacity: '1', color: 'black'}}\r\n          id=\"FormControlTextarea1\"\r\n          rows=\"2\"\r\n          placeholder=\"some explanation...\"\r\n          value={explanation}\r\n          onChange={(e) => setExplanation(e.target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\" style={{opacity: '0.6'}} className=\"btn btn-light shadow\">\r\n        Add #{items.length + 1}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ToDoForm;\r\n","import React, { useContext } from \"react\";\r\nimport TasksContext from \"../context/tasksContext\";\r\nimport withDraggable from \"../hoc/withDraggable\";\r\n\r\nfunction ToDoCard({ item }) {\r\n  const { items, setItems } = useContext(TasksContext);\r\n\r\n  const handleDelete = (targetItem) => {\r\n    const newItems = items.filter((item) => item.id !== targetItem.id);\r\n    setItems(newItems);\r\n  };\r\n\r\n  const handleDone = (targetItem) => {\r\n    const newItems = items.map((item) => {\r\n      if (item.id === targetItem.id) {\r\n        let doneDate = \"\";\r\n        if (!item.done) doneDate = new Date().toLocaleString();\r\n        return { ...item, done: !item.done, doneDate: doneDate };\r\n      } else {\r\n        return item;\r\n      }\r\n    });\r\n\r\n    setItems(newItems);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card shadow-lg bg-transparent border rounded\"\r\n    >\r\n      <div className=\"card-body\">\r\n        <h5\r\n          className=\"card-title\"\r\n          style={item.done ? { textDecorationLine: \"line-through\" } : null}\r\n        >\r\n          {item.text}\r\n        </h5>\r\n        <p\r\n          className=\"card-text\"\r\n          style={item.done ? { textDecorationLine: \"line-through\" } : null}\r\n        >\r\n          {item.explanation}\r\n        </p>\r\n        <p className=\"card-text\">{`Creation date: ${item.creationDate}`}</p>\r\n        <p>{item.done && (`Completion date: ${item.doneDate}`) || <br/>}</p>\r\n        <div\r\n          className=\"row mx-0\"\r\n          style={{\r\n            justifyContent: \"space-evenly\",\r\n          }}\r\n        >\r\n          <button\r\n            className={`btn btn-sm ${\r\n              item.done ? \"btn-outline-warning\" : \"btn-outline-success\"\r\n            }`}\r\n            onClick={() => handleDone(item)}\r\n          >\r\n            {item.done ? \"Should Be Done\" : \"Done\"}\r\n          </button>\r\n          <button\r\n            className=\"btn btn-sm btn-outline-danger\"\r\n            onClick={() => handleDelete(item)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withDraggable(ToDoCard);\r\n","import React from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nfunction withDraggable(Component) {\r\n  return function WithDraggable(props) {\r\n    return (\r\n      <Draggable draggableId={props.draggableId} index={props.index}>\r\n        {(provided, snapshot) => (\r\n          <div\r\n            className=\"mb-3\"\r\n            ref={provided.innerRef}\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n          >\r\n            <Component {...props} />\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  };\r\n}\r\n\r\nexport default withDraggable;\r\n","import React, { useContext } from \"react\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport TasksContext from \"../context/tasksContext\";\r\nimport ToDoCard from \"./ToDoCard\";\r\n\r\nfunction ToDoItems() {\r\n  const { items, setItems } = useContext(TasksContext);\r\n\r\n  const handleDragEnd = (result) => {\r\n    console.log(result);\r\n    if (!result.destination) return;\r\n\r\n    const orderedItems = [...items];\r\n    const [newItem] = orderedItems.splice(result.source.index, 1);\r\n    orderedItems.splice(result.destination.index, 0, newItem);\r\n\r\n    setItems(orderedItems);\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={handleDragEnd}>\r\n      <Droppable droppableId=\"12345678\">\r\n        {(provided, snapshot) => (\r\n          <div ref={provided.innerRef} {...provided.droppableProps}>\r\n            {items.map((item, index) => (\r\n              <ToDoCard\r\n                key={index}\r\n                item={item}\r\n                index={index}\r\n                draggableId={`drag-${index}`}\r\n              />\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n}\r\n\r\nexport default ToDoItems;\r\n","import React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport TasksContext from \"../context/tasksContext\";\r\n\r\nfunction DeleteAll() {\r\n  const { items, setItems, refInput } = useContext(TasksContext);\r\n\r\n  const handleClick = () => {\r\n    setItems([]);\r\n    refInput.current.focus();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {items.length !== 0 && (\r\n        <button className=\"btn btn-danger\" onClick={handleClick}>\r\n          Delete All\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DeleteAll;\r\n","import React, { useState } from \"react\";\r\nimport TasksContext from \"../context/tasksContext\";\r\nimport ToDoForm from \"./ToDoForm\";\r\nimport ToDoItems from \"./ToDoItems\";\r\nimport DeleteAll from \"./DeleteAll\";\r\n\r\nfunction ToDo() {\r\n  const [items, setItems] = useState([]);\r\n  const [text, setText] = useState(\"\");\r\n  const [explanation, setExplanation] = useState(\"\");\r\n\r\n  const refInput = React.createRef();\r\n\r\n  const value = {\r\n    refInput,\r\n    items,\r\n    setItems,\r\n    text,\r\n    setText,\r\n    explanation,\r\n    setExplanation,\r\n  };\r\n\r\n  return (\r\n    <TasksContext.Provider value={value}>\r\n      <div className=\"row mx-0 mt-2 mb-4 d-block\">\r\n        <ToDoForm />\r\n      </div>\r\n      <div\r\n        className=\"row mx-0 mb-1 d-block\"\r\n      >\r\n        <ToDoItems />\r\n      </div>\r\n      <div\r\n        className=\"row mx-0 mb-2 mt-5 justify-content-center\"\r\n      >\r\n        <DeleteAll />\r\n      </div>\r\n    </TasksContext.Provider>\r\n  );\r\n}\r\n\r\nexport default ToDo;\r\n","import React from \"react\";\r\nimport ToDo from \"./ToDo\";\r\n\r\nfunction Content() {\r\n  return (\r\n    <div className=\"container p-0\" style={{ marginTop: \"132px\" }}>\r\n      <div className=\"row m-0 justify-content-center\">\r\n        <div className=\"col-8 p-0\">\r\n          <ToDo />\r\n        </div>\r\n      </div>\r\n      <div className=\"row mx-0 mb-5\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Image from \"./components/Image\";\nimport Content from \"./components/Content\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Image />\n      <Content />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}